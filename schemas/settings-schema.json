{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "disableXmlDocInterop": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether XML documentation interoperability is disabled."
    },
    "disableLinqSupport": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether LINQ support is disabled."
    },
    "disableLinqImplicitlyDeclaredExceptions": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether implicitly declared exceptions are disabled for lambdas in LINQ methods."
    },
    "disableLinqQueryableSupport": {
      "type": "boolean",
      "default": false,
      "description": "Disables analysis of LINQ methods on Queryable. Providers may translate expressions differently."
    },
    "disableControlFlowAnalysis": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether control flow analysis is disabled."
    },
    "enableLegacyRedundancyChecks": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether redundancy checks are available when control flow analysis is disabled."
    },
    "disableBaseExceptionDeclaredDiagnostic": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether the analyzer should not warn when declaring base type 'Exception'."
    },
    "disableBaseExceptionThrownDiagnostic": {
      "type": "boolean",
      "default": false,
      "description": "Indicates whether the analyzer should not warn when throwing base type 'Exception'."
    },
    "treatThrowsExceptionAsCatchRest": {
      "type": "boolean",
      "default": false,
        "description": "Treat [Throws(typeof(Exception))] as a catch-all for remaining exceptions and suppress hierarchy redundancy checks; the base-type diagnostic remains active."
    },
    "ignoredExceptions": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^!?[a-zA-Z0-9_.]+\\*?$"
      },
      "description": "A list of fully qualified exception type names or glob-like patterns to be ignored. Entries may optionally start with '!' to indicate exceptions that should not be ignored."
    },
    "informationalExceptions": {
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "enum": [
          "Throw",
          "Propagation",
          "Always"
        ]
      },
      "description": "A mapping of fully qualified exception type names to their informational handling strategy."
    }
  },
  "required": [
    "ignoredExceptions",
    "informationalExceptions"
  ],
  "additionalProperties": false
}